<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    This file is an EXAMPLE configuration file. While the configuration
    presented in this example file is semi-functional, it isn't very
    interesting. It is here only as a starting point for your deployment
    process.
    
    Very few attribute definitions and data connectors are demonstrated,
    and the data is derived statically from the logged-in username and a
    static example connector.

    Attribute-resolver-full.xml contains more examples of attributes,
    encoders, and data connectors. Deployers should refer to the Shibboleth
    documentation for a complete list of components and their options.
-->
<AttributeResolver
        xmlns="urn:mace:shibboleth:2.0:resolver" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd">


    <!-- ========================================== -->
    <!--      Attribute Definitions                 -->
    <!-- ========================================== -->

    <!--
    The EPPN is the "standard" federated username in higher ed.
    For guidelines on the implementation of this attribute, refer
    to the Shibboleth and eduPerson documentation. Above all, do
    not expose a value for this attribute without considering the
    long term implications. 
    -->
    <AttributeDefinition id="eduPersonPrincipalName" xsi:type="Scoped" scope="%{idp.scope}" sourceAttributeID="uid">
        <Dependency ref="uid" />
        <AttributeEncoder xsi:type="SAML1ScopedString" name="urn:mace:dir:attribute-def:eduPersonPrincipalName" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2ScopedString" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.6" friendlyName="eduPersonPrincipalName" encodeType="false" />
    </AttributeDefinition>

    <!--
    The uid is the closest thing to a "standard" LDAP attribute
    representing a local username, but you should generally *never*
    expose uid to federated services, as it is rarely globally unique.
    -->
    <AttributeDefinition id="uid" xsi:type="PrincipalName">
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:uid" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:0.9.2342.19200300.100.1.1" friendlyName="uid" encodeType="false" />
    </AttributeDefinition>

    <!--
    In the rest of the world, the email address is the standard identifier,
    despite the problems with that practice. Consider making the EPPN
    value the same as your official email addresses whenever possible.
    -->
    <AttributeDefinition id="mail" xsi:type="Simple" sourceAttributeID="email">
        <Dependency ref="registryDB" />
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:mail" encodeType="false" />
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:0.9.2342.19200300.100.1.3" friendlyName="mail" encodeType="false" />
    </AttributeDefinition>

<!-- attributes from ldap -->
<AttributeDefinition id="commonName" xsi:type="Simple" sourceAttributeID="fullName">
    <Dependency ref="registryDB" />
    <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:cn" />
    <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.3" friendlyName="cn" />
</AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="givenName" sourceAttributeID="givenname">
        <Dependency ref="registryDB"/>
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:givenName"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.42" friendlyName="givenName"/>
    </AttributeDefinition>

   <AttributeDefinition xsi:type="Simple" id="surname" sourceAttributeID="surname">
        <Dependency ref="registryDB"/>
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:sn"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.4" friendlyName="sn"/>
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Simple" id="eduPersonAffiliation" sourceAttributeID="affiliation">
        <Dependency ref="staticAttributes"/>
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:eduPersonAffiliation"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.1" friendlyName="eduPersonAffiliation"/>
    </AttributeDefinition>


   <AttributeDefinition xsi:type="Simple" id="eduPersonEntitlement" sourceAttributeID="entitlement">
        <Dependency ref="staticAttributes"/>
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:eduPersonEntitlement"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.7" friendlyName="eduPersonEntitlement"/>
    </AttributeDefinition>


   <AttributeDefinition xsi:type="Simple" id="isMemberOf" sourceAttributeID="GROUP_NAME">
        <Dependency ref="grouperDB"/>
        <AttributeEncoder xsi:type="SAML1String" name="urn:mace:dir:attribute-def:isMemberOf"/>
        <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.5.1.1" friendlyName="isMemberOf"/>
    </AttributeDefinition>



    <!-- ========================================== -->
    <!--      Data Connectors                       -->
    <!-- ========================================== -->

    <DataConnector id="staticAttributes" xsi:type="Static">
        <Attribute id="affiliation">
            <Value>member</Value>
        </Attribute>
        <Attribute id="entitlement">
            <Value>urn:mace:example.edu:demoservice:demo-user</Value>
        </Attribute>
    </DataConnector>

<!-- LDAP Data connector -->
<!-- most of these settings are set in ldap.properties file -->
<!-- 

NOTE: no longer used...attributes come from DB based registry in this version...

<DataConnector id="myLDAP" xsi:type="LDAPDirectory"
    ldapURL="%{idp.attribute.resolver.LDAP.ldapURL}"
    baseDN="%{idp.attribute.resolver.LDAP.baseDN}"
    principal="%{idp.attribute.resolver.LDAP.bindDN}"
    principalCredential="%{idp.attribute.resolver.LDAP.bindDNCredential}"
    useStartTLS="%{idp.attribute.resolver.LDAP.useStartTLS:true}">
    <FilterTemplate>
        <![CDATA[
            %{idp.attribute.resolver.LDAP.searchFilter}
        ]]>
    </FilterTemplate>
    <ReturnAttributes>*</ReturnAttributes>
</DataConnector> -->

<!-- Restricting based on entityID or default release: -->
<DataConnector id="grouperDB" xsi:type="RelationalDatabase" readOnlyConnection="false" queryTimeout="PT3S">
  <Dependency ref="uid"/>
  <BeanManagedConnection>MyDataSource</BeanManagedConnection>
  <QueryTemplate><![CDATA[
      #if (${uid.size()} > 0)
           SELECT DISTINCT grouper_memberships_lw_v.group_name
           FROM grouper.grouper_aval_asn_group_v
           JOIN grouper.grouper_memberships_lw_v
           USING (group_id)
           WHERE subject_id='$uid.get(0)'
               AND grouper_aval_asn_group_v.attribute_def_name_name='etc:attribute:ShibEntityId:ShibEntityId'
               AND (value_string = '$requestContext.getPeerEntityId()' OR value_string='DEFAULT')
               AND grouper_aval_asn_group_v.enabled='T'
           ORDER BY group_name ASC;
      #else
          SELECT 1
      #end
  ]]></QueryTemplate>
 </DataConnector>

<!-- Every single membership to isMemberOf: -->
<!--
<DataConnector id="grouperDB" xsi:type="RelationalDatabase" readOnlyConnection="false" queryTimeout="PT3S">
  <Dependency ref="uid"/>
  <BeanManagedConnection>MyDataSource</BeanManagedConnection>
  <QueryTemplate><![CDATA[
      #if (${uid.size()} > 0)
          SELECT DISTINCT GROUP_NAME 
          FROM grouper.grouper_memberships_lw_v
          WHERE SUBJECT_ID='$uid.get(0)'
      #else
          SELECT 1
      #end
  ]]></QueryTemplate>
 </DataConnector>
-->

<DataConnector id="registryDB" xsi:type="RelationalDatabase" readOnlyConnection="false" queryTimeout="PT3S">
  <Dependency ref="uid"/>
  <BeanManagedConnection>MyDataSource</BeanManagedConnection>
  <QueryTemplate><![CDATA[
      #if (${uid.size()} > 0)
          select givenname, surname, fullName, email from myapp_development.users where uid='$uid.get(0)'
      #else
          SELECT 1
      #end
  ]]></QueryTemplate>
 </DataConnector>




</AttributeResolver>
